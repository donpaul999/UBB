     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 06                          a DB 6
    15 00000001 05                          b DB 5
    16 00000002 0A00                        c DW 10
    17 00000004 0F000000                    e DD 15
    18 00000008 0C00000000000000            x DQ 12
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 66A1[02000000]                  mov AX, [c]
    24 00000006 66BA8000                        mov DX, 128
    25 0000000A 66F7E2                          mul DX
    26 0000000D 8A1D[00000000]                  mov BL, [a]
    27 00000013 B700                            mov BH, 0
    28 00000015 2A1D[01000000]                  sub BL, [b]
    29 0000001B 6601C3                          add BX, AX 
    30 0000001E 6689D8                          mov AX, BX
    31 00000021 8A0D[00000000]                  mov CL, [a]
    32 00000027 020D[01000000]                  add CL, [b]
    33 0000002D F6F1                            div CL
    34 0000002F 660305[04000000]                add AX, [e]
    35 00000036 662B05[08000000]                sub AX, [x] ;AH = 5 AL = 119
    36                                          ; exit(0)
    37 0000003D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    38 0000003F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
