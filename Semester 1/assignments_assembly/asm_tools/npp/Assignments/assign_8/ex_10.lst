     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf, scanf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import printf msvcrt.dll
    11                                  import scanf  msvcrt.dll
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14 00000000 52656164206E3A2000-         msg dd "Read n: ", 0
    14 00000009 000000             
    15 0000000C 2564000000000000            _format dd "%d", 0
    16 00000014 2578000000000000            _format2 dd "%x", 0
    17 0000001C 00000000                    n dd 0
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 68[00000000]                    push dword msg
    24 00000005 FF15[00000000]                  call [printf]
    25 0000000B 83C404                          add ESP, 4*1 ;clear stack
    26                                          
    27 0000000E 68[1C000000]                    push dword n
    28 00000013 68[0C000000]                    push dword _format
    29 00000018 FF15[00000000]                  call [scanf]
    30 0000001E 83C408                          add ESP, 4*2 ;clear stack
    31                                  
    32                                          
    33 00000021 FF35[1C000000]                  push dword [n]
    34 00000027 68[14000000]                    push dword _format2
    35 0000002C FF15[00000000]                  call [printf]
    36 00000032 83C404                          add ESP, 4*1
    37                                          ; exit(0)
    38 00000035 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    39 00000037 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
