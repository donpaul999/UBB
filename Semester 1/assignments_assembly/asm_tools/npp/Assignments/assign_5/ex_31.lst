     1                                  ;Problem 29 not 31!
     2                                  ;A byte string S is given. Build the string D whose elements represent the sum of each two consecutive bytes of S.
     3                                  
     4                                  bits 32 ; assembling for the 32 bits architecture
     5                                  
     6                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     7                                  global start        
     8                                  
     9                                  ; declare external functions needed by our program
    10                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
    11                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    12                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16                                      ; ...
    17 00000000 010203040506                S DB 1, 2, 3, 4, 5, 6
    18                                      len equ $-S
    19 00000006 00<rept>                    d times len DB 0
    20                                      
    21                                  ; our code starts here
    22                                  segment code use32 class=code
    23                                      start:
    24 00000000 BE00000000                      mov ESI, 0
    25                                          repeat:
    26 00000005 8A86[00000000]                      mov AL, [S + ESI]
    27 0000000B 46                                  inc ESI
    28 0000000C 8A9E[00000000]                      mov BL, [S + ESI]
    29 00000012 00D8                                add AL, BL
    30 00000014 0430                                add AL, '0'
    31 00000016 8886[06000000]                      mov [d + ESI], AL
    32 0000001C 83FE05                          cmp ESI, len - 1
    33 0000001F 72E4                            jb repeat
    34                                          ; exit(0)
    35 00000021 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    36 00000023 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
