     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 06                          a DB 6
    15 00000001 0500                        b DW 5
    16 00000003 0A000000                    c DD 10
    17 00000007 0F00000000000000            d DQ 15
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22 00000000 A0[00000000]                    mov AL, [a]
    23 00000005 0205[01000000]                  add AL, [b]
    24 0000000B 8A1D[00000000]                  mov BL, [a]
    25 00000011 021D[03000000]                  add BL, [c]
    26 00000017 8A0D[03000000]                  mov CL, [c]
    27 0000001D 020D[01000000]                  add CL, [b]
    28 00000023 00D8                            add AL, BL
    29 00000025 00C8                            add AL, CL
    30 00000027 2A05[07000000]                  sub AL, [d]
    31                                          ; exit(0)
    32 0000002D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    33 0000002F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
