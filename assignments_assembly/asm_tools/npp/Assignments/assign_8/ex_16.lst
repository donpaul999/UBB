     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf, scanf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import printf msvcrt.dll
    11                                  import scanf  msvcrt.dll
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14 00000000 52656164206120616E-         msg dd "Read a and b: ", 0
    14 00000009 6420623A2000000000-
    14 00000012 0000               
    15 00000014 2578000000000000            _format2 dd "%x", 0
    16 0000001C 2564256400000000            _format dd "%d%d", 0
    17 00000024 00000000                    a dd 0
    18 00000028 00000000                    b dd 0
    19 0000002C 02000000                    c dd 2
    20                                      
    21                                      ; our code starts here
    22                                  segment code use32 class=code
    23                                      start:
    24                                          ; ...
    25 00000000 68[00000000]                    push dword msg
    26 00000005 FF15[00000000]                  call [printf]
    27 0000000B 83C404                          add ESP, 4*1 ;clear stack
    28                                          
    29 0000000E 68[24000000]                    push dword a
    30 00000013 68[28000000]                    push dword b
    31 00000018 68[1C000000]                    push dword _format
    32 0000001D FF15[00000000]                  call [scanf]
    33 00000023 83C40C                          add ESP, 4*3 ;clear stack
    34                                  
    35 00000026 BA00000000                      mov EDX, 0
    36 0000002B A1[24000000]                    mov EAX, [a]
    37 00000030 0305[28000000]                  add EAX, [b]
    38 00000036 F735[2C000000]                  div dword [c]
    39                                          
    40 0000003C 50                              push dword EAX
    41 0000003D 68[14000000]                    push dword _format2
    42 00000042 FF15[00000000]                  call [printf]
    43 00000048 83C404                          add ESP, 4*1
    44                                          ; exit(0)
    45 0000004B 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    46 0000004D FF15[00000000]                  call    [exit]       ; call exit to terminate the program
