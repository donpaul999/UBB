     1                                  ;A byte string S is given. Build the string D whose elements represent the sum of each two consecutive bytes of S.
     2                                  
     3                                  bits 32 ; assembling for the 32 bits architecture
     4                                  
     5                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     6                                  global start        
     7                                  
     8                                  ; declare external functions needed by our program
     9                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
    10                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    11                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15                                      ; ...
    16 00000000 010203040506                S DB 1, 2, 3, 4, 5, 6
    17                                      len equ $-S
    18 00000006 00<rept>                    d times len DB 0
    19                                      
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23 00000000 BE00000000                      mov ESI, 0
    24                                          repeat:
    25 00000005 8A86[00000000]                      mov AL, [S + ESI]
    26 0000000B 46                                  inc ESI
    27 0000000C 8A9E[00000000]                      mov BL, [S + ESI]
    28 00000012 00D8                                add AL, BL
    29 00000014 0430                                add AL, '0'
    30 00000016 8886[06000000]                      mov [d + ESI], AL
    31 0000001C 83FE05                          cmp ESI, len - 1
    32 0000001F 72E4                            jb repeat
    33                                          ; exit(0)
    34 00000021 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    35 00000023 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
