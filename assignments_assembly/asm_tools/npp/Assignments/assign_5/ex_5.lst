     1                                  ;Se da un sir de caractere S. Sa se construiasca sirul D care sa contina toate literele mici din sirul S.
     2                                  
     3                                  bits 32 ; assembling for the 32 bits architecture
     4                                  
     5                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     6                                  global start        
     7                                  
     8                                  ; declare external functions needed by our program
     9                                  global start
    10                                  extern ExitProcess, printf
    11                                  import ExitProcess kernel32.dll
    12                                  import printf msvcrt.dll
    13                                     ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    14                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    15                                  
    16                                  ; our data is declared here (the variables needed by our program)
    17                                  segment data use32 class=data
    18                                      ; ...
    19 00000000 61416242322578              S DB 'a', 'A', 'b', 'B', '2', '%', 'x'
    20                                      len equ $-S
    21 00000007 00<rept>                    d times len DB 0
    22                                      
    23                                  ; our code starts here
    24                                  segment code use32 class=code
    25                                      start:
    26 00000000 BEFFFFFFFF                      mov ESI, -1
    27                                          repeat:
    28 00000005 46                                  inc ESI
    29 00000006 8A86[00000000]                      mov AL, [S+ESI]
    30 0000000C 3C61                                cmp AL, 'a'
    31 0000000E 72F5                                jb repeat
    32 00000010 3C7A                                cmp AL, 'z'
    33 00000012 77F1                                ja repeat
    34 00000014 8886[07000000]                      mov [d + ESI], AL
    35 0000001A 83FE07                          cmp ESI, len
    36 0000001D 72E6                            jb repeat
    37                                          ; exit(0)
    38 0000001F 68[07000000]                    push dword d
    39 00000024 FF15[00000000]                  call [printf]
    40                                  
    41 0000002A 6A00                            push dword 0
    42 0000002C FF15[00000000]                  call [ExitProcess]
