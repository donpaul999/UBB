     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 02                          a DB 2
    14 00000001 0500                        b DW 5
    15 00000003 0A000000                    c DD 10
    16 00000007 6400000000000000            d DQ 100
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22 00000000 8B1D[00000000]                  mov EBX, [a]
    23 00000006 031D[01000000]                  add EBX, [b]
    24 0000000C 8B0D[03000000]                  mov ECX, [c]
    25 00000012 29D9                            sub ECX, EBX
    26 00000014 A1[07000000]                    mov EAX, [d]
    27 00000019 01C8                            add EAX, ECX
    28 0000001B 83D800                          sbb EAX, 0
    29                                          ; exit(0)
    30 0000001E 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    31 00000020 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
